syntax = "proto3";

package routine;

option go_package = "github.com/flavioesteves/wizer-app/routine/proto";

import "google/protobuf/empty.proto";


message Routine {
  string id = 1;
  string name = 2;
  string profile_id = 3;

  string created_by = 4;
  string updated_by = 5;
  string created_at = 6;
  string updated_at = 7;
}


message Step {
  string description = 1;
  string image_url = 2;
}


message Exercise {
  string id = 1;
  string name = 2;
  string muscle_group = 3;
  string description = 4;
  repeated Step steps = 5;
  string video_url = 6;
  int32 video_duration_seconds = 7;

  string created_by = 8;
  string updated_by = 9;
  string created_at = 10;
  string updated_at = 11;
}


message CreateRoutineRequest {
  Routine routine = 1;
}

message GetRoutineRequest {
  string  id = 1;
}

message UpdateRoutineRequest {
  Routine routine = 1;
}

message DeleteRoutineRequest {
  string id = 1;
}

message GetAllRoutinesRequest {
// Potential parameters for filtering, pagination
}

message GetAllRoutinesResponse {
  repeated Routine routines = 1;
}

message RoutineResponse {
  Routine routine = 1;
}

// Relationship many to many Routine <-> Exercise
message AddExerciseToRoutineRequest {
  string routine_id = 1;
  repeated string exercise_ids = 2;
}

message AddExercissToRoutineResponse {
  bool success = 1;
}

message RemoveExerciseFromRoutineRequest {
  string routine_id = 1;
  repeated string exercise_ids = 2;
}

message RemoveExerciseFromRoutineResponse {
  bool success = 2;
}

message GetExercisesByRoutineIdRequest {
  string routine_id = 1;
}

message GetExercisesByRoutineIdResponse {
  repeated Exercise exercises = 1;
}



service RoutineService {
  rpc CreateRoutine (CreateRoutineRequest) returns (RoutineResponse);
  rpc GetRoutine (GetRoutineRequest) returns (RoutineResponse);
  rpc UpdateRoutine (UpdateRoutineRequest) returns (RoutineResponse);
  rpc DeleteRoutine (DeleteRoutineRequest) returns (google.protobuf.Empty);
  rpc GetAllRoutines (GetAllRoutinesRequest) returns (GetAllRoutinesResponse);
  
  // Relationship many to many Routine <-> Exercise
  rpc AddExerciseToRoutine(AddExerciseToRoutineRequest) returns (AddExercissToRoutineResponse);
  rpc RemoveExerciseFromRoutine (RemoveExerciseFromRoutineRequest) returns (RemoveExerciseFromRoutineResponse);
  rpc GetExercisesByRoutineId (GetExercisesByRoutineIdRequest) returns (GetExercisesByRoutineIdResponse);
}
