syntax = "proto3";

package routine;

option go_package = "github.com/flavioesteves/wizer-app/broker/proto/routine";

import "google/protobuf/empty.proto";

import "model.proto";

message CreateRoutineRequest {
  model.Routine routine = 1;
}

message GetRoutineRequest {
  string  id = 1;
}

message UpdateRoutineRequest {
  model.Routine routine = 1;
}

message DeleteRoutineRequest {
  string id = 1;
}

message GetAllRoutinesRequest {
// Potential parameters for filtering, pagination
}

message GetAllRoutinesResponse {
  repeated model.Routine routines = 1;
}

message RoutineResponse {
  model.Routine routine = 1;
}

// Relationship many to many Routine <-> Exercise
message AddExerciseToRoutineRequest {
  string routine_id = 1;
  repeated string exercise_ids = 2;
}

message AddExerciseToRoutineResponse {
  bool success = 1;
}

message RemoveExerciseFromRoutineRequest {
  string routine_id = 1;
  repeated string exercise_ids = 2;
}

message RemoveExerciseFromRoutineResponse {
  bool success = 1;
}

message GetExercisesByRoutineIdRequest {
  string routine_id = 1;
}

message GetExercisesByRoutineIdResponse {
  repeated model.Exercise exercises = 1;
}



service RoutineService {
  rpc CreateRoutine (CreateRoutineRequest) returns (RoutineResponse);
  rpc GetRoutine (GetRoutineRequest) returns (RoutineResponse);
  rpc UpdateRoutine (UpdateRoutineRequest) returns (RoutineResponse);
  rpc DeleteRoutine (DeleteRoutineRequest) returns (google.protobuf.Empty);
  rpc GetAllRoutines (GetAllRoutinesRequest) returns (GetAllRoutinesResponse);

  // Relationship many to many Routine <-> Exercise
  rpc AddExerciseToRoutine(AddExerciseToRoutineRequest) returns (AddExerciseToRoutineResponse);
  rpc RemoveExerciseFromRoutine (RemoveExerciseFromRoutineRequest) returns (RemoveExerciseFromRoutineResponse);
  rpc GetExercisesByRoutineId (GetExercisesByRoutineIdRequest) returns (GetExercisesByRoutineIdResponse);
}
