services:
  wizer-frontend:
    build:
      context: ./../wizer-frontend
      dockerfile: ./../wizer-frontend/wizer-frontend.dockerfile
    restart: always
    ports:
      - "3000:3000"
    deploy:
      mode: replicated
      replicas: 1

  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8080:8080" 
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8081:8081" 
    deploy:
      mode: replicated
      replicas: 1


  user-service:
    build:
      context: ./../user-service
      dockerfile: ./../user-service/user-service.dockerfile
    restart: always
    ports:
      - "50051:50051" 
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=wizer_app sslmode=disable timezone=UTC connect_timeout=5"

  
  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: wizer_app
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  redis:
    image: 'redis:7.2.5-alpine'
    restart: always
    ports:
      - "6379:6379" 
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - ./data:/data
